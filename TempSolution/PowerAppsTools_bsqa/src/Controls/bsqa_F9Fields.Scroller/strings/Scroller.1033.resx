<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing"
    mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework
    object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.
    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,
            Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,
            Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <!-- Common Field Strings -->
  <data name="Label_Display_Key" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="Label_Desc_Key" xml:space="preserve">
    <value>Label for the field.</value>
  </data>
  <data name="Hint_Display_Key" xml:space="preserve">
    <value>Hint</value>
  </data>
  <data name="Hint_Desc_Key" xml:space="preserve">
    <value>Hint Text to display below the field.</value>
  </data>
  <data name="Info_Display_Key" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="Info_Desc_Key" xml:space="preserve">
    <value>If set, an info button will appear that will reveal the info content when clicked.</value>
  </data>
  <data name="Required_Display_Key" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="Required_Desc_Key" xml:space="preserve">
    <value>Shows an asterisk if the field is required.</value>
  </data>
  <data name="ValidationMessage_Display_Key" xml:space="preserve">
    <value>Validation Message</value>
  </data>
  <data name="ValidationMessage_Desc_Key" xml:space="preserve">
    <value>Validation message to display.  Message style can be changed by using the Validation State.</value>
  </data>
  <data name="ValidationState_Display_Key" xml:space="preserve">
    <value>Validation State</value>
  </data>
  <data name="ValidationState_Desc_Key" xml:space="preserve">
    <value>Changes the appearance of the Validation Message</value>
  </data>
  <data name="ValidationState_None_Display_Key" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ValidationState_Success_Display_Key" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="ValidationState_Warning_Display_Key" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="ValidationState_Error_Display_Key" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Orientation_Display_Key" xml:space="preserve">
    <value>Orientation</value>
  </data>
  <data name="Orientation_Desc_Key" xml:space="preserve">
    <value>Select whether the label should be oriented vertically or horizontally.</value>
  </data>
  <data name="Orientation_Horizontal_Display_Key" xml:space="preserve">
    <value>Horizontal</value>
  </data>
  <data name="Orientation_Vertical_Display_Key" xml:space="preserve">
    <value>Vertical</value>
  </data>
  <data name="Size_Display_Key" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Size_Desc_Key" xml:space="preserve">
    <value>Choose the size for the label and control if supported.</value>
  </data>
  <data name="Size_Small_Display_Key" xml:space="preserve">
    <value>Small</value>
  </data>
  <data name="Size_Medium_Display_Key" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="Size_Large_Display_Key" xml:space="preserve">
    <value>Large</value>
  </data>
  <data name="Appearance_Display_Key" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="Content_Height_Disp_Key" xml:space="preserve">
    <value>Content Height</value>
  </data>
  <data name="Content_Height_Desc_Key" xml:space="preserve">
    <value>Actual height required by the field.</value>
  </data>
  <data name="Content_Width_Disp_Key" xml:space="preserve">
    <value>Content Width</value>
  </data>
  <data name="Content_Width_Desc_Key" xml:space="preserve">
    <value>Actual width required by the field.</value>
  </data>
  <data name="Event_Schema_Disp_Key" xml:space="preserve">
    <value>Event Schema</value>
  </data>
  <data name="Event_Schema_Desc_Key" xml:space="preserve">
    <value>Schema that describes event data.</value>
  </data>
  <data name="Event_Disp_Key" xml:space="preserve">
    <value>Event</value>
  </data>
  <data name="Event_Desc_Key" xml:space="preserve">
    <value>Most recent event that has been triggered.</value>
  </data>
  <data name="Appearance_Outline_Display_Key" xml:space="preserve">
    <value>Outline</value>
  </data>
  <data name="Appearance_FilledDarker_Display_Key" xml:space="preserve">
    <value>Filled-Darker</value>
  </data>
  <data name="Appearance_FilledLighter_Display_Key" xml:space="preserve">
    <value>Filled-Lighter</value>
  </data>
  <data name="Appearance_Desc_Key" xml:space="preserve">
    <value>Select an appearance variant for the control.</value>
  </data>
  <!-- Control Specific Strings -->
  <data name="DefaultValue_Display_Key" xml:space="preserve">
    <value>Default Value</value>
  </data>
  <data name="DefaultValue_Desc_Key" xml:space="preserve">
    <value>Initial value for the control.  The value will be reset if the default value changes.</value>
  </data>
  <data name="Value_Display_Key" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Value_Desc_Key" xml:space="preserve">
    <value>Current value of the control</value>
  </data>
  <data name="Placeholder_Display_Key" xml:space="preserve">
    <value>Placeholder</value>
  </data>
  <data name="Placeholder_Desc_Key" xml:space="preserve">
    <value>Placeholder text that will appear if there is no value</value>
  </data>
  <data name="DelayOutput_Display_Key" xml:space="preserve">
    <value>Delay Output</value>
  </data>
  <data name="DelayOutput_Desc_Key" xml:space="preserve">
    <value>Choose to delay output.  Can be helpful in galleries or to reduce the number of search queries in search fields.</value>
  </data>
  <data name="DelayOutput_None_Display_Key" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="DelayOutput_Debounce_Display_Key" xml:space="preserve">
    <value>Debounce</value>
  </data>
  <data name="DelayOutput_OnBlur_Display_Key" xml:space="preserve">
    <value>On Blur</value>
  </data>
  <data name="DelayTimeout_Display_Key" xml:space="preserve">
    <value>Delay Timeout</value>
  </data>
  <data name="DelayTimeout_Desc_Key" xml:space="preserve">
    <value>Number of millisecond to delay before triggering a change event when Delay Output set to Debounce</value>
  </data>
  <data name="TextareaField_Display_Key" xml:space="preserve">
    <value>Textarea Field</value>
  </data>
  <data name="TextareaField_Desc_Key" xml:space="preserve">
    <value>Input allows the user to enter and edit multiline text</value>
  </data>
  <data name="AllowResize_None_Display_Key" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="AllowResize_Both_Display_Key" xml:space="preserve">
    <value>Both</value>
  </data>
  <data name="AllowResize_Horizontal_Display_Key" xml:space="preserve">
    <value>Horizontal</value>
  </data>
  <data name="AllowResize_Vertical_Display_Key" xml:space="preserve">
    <value>Vertical</value>
  </data>
  <data name="AllowResize_Display_Key" xml:space="preserve">
    <value>Allow Resize</value>
  </data>
  <data name="AllowResize_Desc_Key" xml:space="preserve">
    <value>Allow user to resize the text area field</value>
  </data>
  <data name="OnResize_Disp_Key" xml:space="preserve">
    <value>On Resize</value>
  </data>
  <data name="OnResize_Desc_Key" xml:space="preserve">
    <value>Executes when the internal content area of the control changes.</value>
  </data>
  <data name="ControlName_Display_Key" xml:space="preserve">
    <value>ControlName_Display_Key</value>
  </data>
  <data name="ControlName_Desc_Key" xml:space="preserve">
    <value>ControlName_Desc_Key</value>
  </data>
  <data name="ControlType_Container_Display_Key" xml:space="preserve">
    <value>ControlType_Container_Display_Key</value>
  </data>
  <data name="ControlType_TextArea_Display_Key" xml:space="preserve">
    <value>ControlType_TextArea_Display_Key</value>
  </data>
  <data name="ControlType_Display_Key" xml:space="preserve">
    <value>ControlType_Display_Key</value>
  </data>
  <data name="ControlType_Desc_Key" xml:space="preserve">
    <value>ControlType_Desc_Key</value>
  </data>
  <data name="InputEvent_Display_Key" xml:space="preserve">
    <value>InputEvent_Display_Key</value>
  </data>
  <data name="InputEvent_Desc_Key" xml:space="preserve">
    <value>InputEvent_Desc_Key</value>
  </data>
  <data name="X_Display_Key" xml:space="preserve">
    <value>X_Display_Key</value>
  </data>
  <data name="X_Desc_Key" xml:space="preserve">
    <value>X_Desc_Key</value>
  </data>
  <data name="Y_Display_Key" xml:space="preserve">
    <value>Y_Display_Key</value>
  </data>
  <data name="Y_Desc_Key" xml:space="preserve">
    <value>Y_Desc_Key</value>
  </data>
  <data name="DebounceTimeout_Display_Key" xml:space="preserve">
    <value>DebounceTimeout_Display_Key</value>
  </data>
  <data name="DebounceTimeout_Desc_Key" xml:space="preserve">
    <value>DebounceTimeout_Desc_Key</value>
  </data>
  <data name="OnScroll_Disp_Key" xml:space="preserve">
    <value>OnScroll_Disp_Key</value>
  </data>
  <data name="OnScroll_Desc_Key" xml:space="preserve">
    <value>OnScroll_Desc_Key</value>
  </data>
  <data name="ScrollerField_Display_Key" xml:space="preserve">
    <value>ScrollerField_Display_Key</value>
  </data>
  <data name="ScrollerField_Desc_Key" xml:space="preserve">
    <value>ScrollerField_Desc_Key</value>
  </data>
</root>